syntax = "proto3";

package fairyring.keyshare;

option go_package = "fairyring/x/keyshare/types";

message KeysharePacketData {
  oneof packet {
    NoData                        noData                    = 1;
    RequestAggrKeysharePacketData requestAggrKeysharePacket = 2;
    GetAggrKeysharePacketData     getAggrKeysharePacket     = 3;
    AggrKeyshareDataPacketData    aggrKeyshareDataPacket    = 4;
  }
}

message NoData {}

// RequestAggrKeysharePacketData defines a struct for the packet payload
message RequestAggrKeysharePacketData {
  oneof id {
    string proposal_id = 1;
    string request_id = 2;
  }
}

// RequestAggrKeysharePacketAck defines a struct for the packet acknowledgment
message RequestAggrKeysharePacketAck {
  string identity = 1;
  string pubkey   = 2;
}

// GetAggrKeysharePacketData defines a struct for the packet payload
message GetAggrKeysharePacketData {
  string identity = 1;
}

// GetAggrKeysharePacketAck defines a struct for the packet acknowledgment
message GetAggrKeysharePacketAck {}

// AggrKeyshareDataPacketData defines a struct for the packet payload
message AggrKeyshareDataPacketData {
  string identity      = 1;
  string pubkey        = 2;
  string aggr_keyshare = 3;
  string aggr_height   = 4;
  string proposal_id   = 5; // used for private governance
  string request_id    = 6; // might be useful to destination chains to sort out the response
  uint64 retries       = 7;
}

// AggrKeyshareDataPacketAck defines a struct for the packet acknowledgment
message AggrKeyshareDataPacketAck {}
